{"version":3,"sources":["components/Statistics/Statistics.module.scss","components/Container/Container.module.scss","components/Section/Section.module.scss","components/FeedbackOptions/FeedbackOptions.module.scss","components/List/List.module.scss","components/Item/Item.module.scss","components/Notification/Notification.module.scss","components/Container/Container.jsx","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/Item/Item.jsx","components/List/List.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","Section","title","Statistics","good","neutral","bad","total","positivePercentage","statisticsBlock","item","Item","name","onClick","List","options","feedbackList","map","FeedbackBlock","onLeaveFeedback","feedbackBlock","Notification","message","App","state","submitHandler","e","currentTarget","getAttribute","value","setState","countTotalFeedback","Object","values","reduce","acc","countPositiveFeedbackPercentage","countPositiveFeedback","Math","round","this","FeedbackOptions","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbcaa039.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__1XJKa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2yMuC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__a3e4r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBlock\":\"FeedbackOptions_feedbackBlock__1tjlZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackList\":\"List_feedbackList__1nULn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Item_item__P-fbq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1iHm6\"};","import styles from './Container.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\nexport default Container;\r\n","import styles from './Section.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h1 className={styles.title}>{title}</h1>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node,\r\n};\r\nexport default Section;\r\n","import styles from './Statistics.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <div className={styles.statisticsBlock}>\r\n    <p className={styles.item}>Good: {good}</p>\r\n    <p className={styles.item}>Neutral: {neutral}</p>\r\n    <p className={styles.item}>Bad: {bad}</p>\r\n    <p className={styles.item}>Total: {total}</p>\r\n    <p className={styles.item}>Positive feedback: {positivePercentage}%</p>\r\n  </div>\r\n);\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import styles from './Item.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Item = ({ name, onClick }) => (\r\n  <li className={styles.item} name={name} onClick={onClick}>\r\n    {name}\r\n  </li>\r\n);\r\nItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nexport default Item;\r\n","import styles from './List.module.scss';\r\nimport Item from '../Item';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst List = ({ options, onClick }) => (\r\n  <ul className={styles.feedbackList}>\r\n    {options.map(item => (\r\n      <Item key={item} name={item} onClick={onClick} />\r\n    ))}\r\n  </ul>\r\n);\r\nList.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nexport default List;\r\n","import styles from './FeedbackOptions.module.scss';\r\nimport List from '../List';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackBlock = ({ options, onLeaveFeedback }) => (\r\n  <div className={styles.feedbackBlock}>\r\n    <List onClick={onLeaveFeedback} options={options} />\r\n  </div>\r\n);\r\n\r\nFeedbackBlock.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackBlock;\r\n","import styles from './Notification.module.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={styles.message}>{message}</p>\r\n);\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport Container from './components/Container';\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\nimport './styles.scss';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  submitHandler = e => {\n    const name = e.currentTarget.getAttribute('name');\n    const value = this.state[name];\n    this.setState({\n      [name]: value + 1,\n    });\n  };\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((acc, value) => acc + value, 0);\n  };\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    const countPositiveFeedback = (this.state.good * 100) / total;\n    return Math.round(countPositiveFeedback);\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.submitHandler}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}